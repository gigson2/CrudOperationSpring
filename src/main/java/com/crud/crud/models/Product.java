package com.crud.crud.models;

import jakarta.persistence.*;

import java.util.Date;

@Entity
@Table(name = "products") // create table if it does not exist
public class Product {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;
    private String name;
    private String brand;
    private String category;
    private int quantity;
    private double price;
    @Column(columnDefinition = "TEXT")
    private String description;
    private Date createdAt;
    private String imageFileName;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public String getImageFileName() {
        return imageFileName;
    }

    public void setImageFileName(String imageFileName) {
        this.imageFileName = imageFileName;
    }
}

/*Explanations
        Spring Boot application with JPA (Java Persistence API) and a controller for managing Product entities.
@Entity: Marks this class as a JPA entity, meaning it will be mapped to a table in the database.

@Table(name = "products"): Specifies the table name in the database that this entity will be mapped to. Here, itâ€™s specifying that the table name is products.
        Fields:

        id: Primary key for the entity, automatically generated.
        name, brand, category, quantity, price, description, createdAt, imageFileName: These fields correspond to columns in the products table.
        Annotations:

@Id: Indicates the primary key field.
@GeneratedValue(strategy = GenerationType.IDENTITY): Specifies that the primary key value is automatically generated by the database.
@Column(columnDefinition = "TEXT"): Specifies that the description field should use a TEXT type in the database to accommodate larger text.*/


